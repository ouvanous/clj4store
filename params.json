{"name":"Clj4store","tagline":"Simple http 4store client for clojure","body":"# clj4store\r\n\r\nA simple 4store http client for clojure.\r\n\r\n## Usage\r\n\r\n```clojure\r\n; return {:status \"4store status code\" :body \"4store body message\" }\r\n\r\n; define the 4store end-point\r\n(def end-point (create-end-point \"http://0.0.0.0:8009\"))\r\n\r\n; sparql query \r\n(get end-point \"SELECT ?s ?p ?o WHERE {?s ?p ?o} LIMIT 5 \") \r\n; => {:status 200 :body {\"head\":{\"vars\":[\"s\",\"p\",\"o\"]}, \"results\": { \"bindings\":[... }\r\n\r\n; sparql update 1.1\r\n(post end-point \"INSERT { <http://test.com/1> <http://test.com/p1> <http://test.com/2> }\") \r\n; => {:status 200 :body \"4store body message...\" }\r\n\r\n; replace data in graph\r\n(put end-point \"<http://test.com/2> <http://test.com/p1> <http://test.com/1> .\" \"http://mygraph.com\") \r\n; => {:status 201 :body \"imported successfully ...\" }\r\n\r\n; replace data in graph by file data\r\n(put-file end-point \"/path/to/file.nt\" \"http://mygraph.com\") \r\n; => {:status 201 :body \"imported successfully ...\" }\r\n\r\n; delete graph\r\n(delete end-point \"http://mygraph.com\") \r\n; => {:status 200 :body \"200 deleted successfully ...\" }\r\n\r\n```\r\n\r\n## License\r\nDistributed under the Eclipse Public License, the same as Clojure.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}